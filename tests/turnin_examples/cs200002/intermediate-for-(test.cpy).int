0: jump _ _ main
1: begin_block max3 _ _
2: + counterFunctionCalls 1 T_1
3: := T_1 _ counterFunctionCalls
4: > x y 7
5: jump _ _ 11
6: > x z 9
7: jump _ _ 11
8: := x _ m
9: jump _ _ 18
10: > y x 13
11: jump _ _ 17
12: > y z 15
13: jump _ _ 17
14: := y _ m
15: jump _ _ 18
16: := z _ m
17: ret m _ _
18: end_block max3 _ _
19: begin_block fib _ _
20: + counterFunctionCalls 1 T_2
21: := T_2 _ counterFunctionCalls
22: < x 0 25
23: jump _ _ 28
24: - 0 1 T_3
25: ret T_3 _ _
26: jump _ _ 44
27: = x 0 32
28: jump _ _ 30
29: = x 1 32
30: jump _ _ 34
31: ret 1 _ _
32: jump _ _ 44
33: - x 1 T_4
34: par T_4 CV _
35: par T_5 ret _
36: call fib _ _
37: - x 2 T_6
38: par T_6 CV _
39: par T_7 ret _
40: call fib _ _
41: + T_5 T_7 T_8
42: ret T_8 _ _
43: end_block fib _ _
44: begin_block divides _ _
45: + counterFunctionCalls 1 T_9
46: := T_9 _ counterFunctionCalls
47: / y x T_10
48: * T_10 x T_11
49: = y T_11 52
50: jump _ _ 54
51: ret 1 _ _
52: jump _ _ 55
53: ret 0 _ _
54: end_block divides _ _
55: begin_block isPrime _ _
56: + counterFunctionCalls 1 T_12
57: := T_12 _ counterFunctionCalls
58: := 2 _ i
59: < i x 62
60: jump _ _ 73
61: par i CV _
62: par x CV _
63: par T_13 ret _
64: call divides _ _
65: = T_13 1 68
66: jump _ _ 70
67: ret 0 _ _
68: jump _ _ 70
69: + i 1 T_14
70: := T_14 _ i
71: jump _ _ 60
72: ret 1 _ _
73: end_block isPrime _ _
74: begin_block sqr _ _
75: + counterFunctionCalls 1 T_15
76: := T_15 _ counterFunctionCalls
77: * x x T_16
78: ret T_16 _ _
79: end_block sqr _ _
80: begin_block quad _ _
81: + counterFunctionCalls 1 T_17
82: := T_17 _ counterFunctionCalls
83: par x CV _
84: par T_18 ret _
85: call sqr _ _
86: par x CV _
87: par T_19 ret _
88: call sqr _ _
89: * T_18 T_19 T_20
90: := T_20 _ y
91: ret y _ _
92: end_block quad _ _
93: begin_block leap _ _
94: + counterFunctionCalls 1 T_21
95: := T_21 _ counterFunctionCalls
96: mod year 4 T_22
97: = T_22 0 100
98: jump _ _ 103
99: mod year 100 T_23
100: != T_23 0 106
101: jump _ _ 103
102: mod year 400 T_24
103: = T_24 0 106
104: jump _ _ 108
105: ret 1 _ _
106: jump _ _ 109
107: ret 0 _ _
108: end_block leap _ _
109: begin_block main _ _
110: := 0 _ counterFunctionCalls
111: inp i _ _
112: out i _ _
113: := 1600 _ i
114: <= i 2000 117
115: jump _ _ 124
116: par i CV _
117: par T_25 ret _
118: call leap _ _
119: out T_25 _ _
120: + i 400 T_26
121: := T_26 _ i
122: jump _ _ 115
123: par 2023 CV _
124: par T_27 ret _
125: call leap _ _
126: out T_27 _ _
127: par 2024 CV _
128: par T_28 ret _
129: call leap _ _
130: out T_28 _ _
131: par 3 CV _
132: par T_29 ret _
133: call quad _ _
134: out T_29 _ _
135: par 5 CV _
136: par T_30 ret _
137: call fib _ _
138: out T_30 _ _
139: := 1 _ i
140: <= i 12 143
141: jump _ _ 150
142: par i CV _
143: par T_31 ret _
144: call isPrime _ _
145: out T_31 _ _
146: + i 1 T_32
147: := T_32 _ i
148: jump _ _ 141
149: out counterFunctionCalls _ _
150: halt _ _ _
151: end_block main _ _
